import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.Scanner;
/*
    Author: Daeshaun Morrison, Muhlenberg College class of 2024(daeshaunkmorrison@gmail.com)
    Date: 4/9/2021
    Instructor: Professor Hellsing
    Description: A `Node` class to store an individual piece of data, a doubly `LinkedList`
class to store the first and last node in the chain and functions associated with the data structure, and a
`Library` class that will be using a `LinkedList` to keep track of the titles of books in the library. The user
should be able to insert new titles, search for titles, remove titles, and output all of the titles in the library.
*/
//a class named Library to keep track of the book titles in a
//        library.
public class LLibrary {
    public static void main(String[] args) throws IOException{
//        A single instance of a LinkedList object to store the book titles
        LinkedList<Book> booksInStock = new LinkedList<>();
        Scanner scan = new Scanner(System.in);
        boolean keepGoing = true;

//      A loop that outputs a menu of options regarding the library (add titles, search for titles,
//remove titles, output all titles, quit), prompts the user for which option they would like,
//and uses a switch to take the appropriate actions OR quits the loop if they select quit.
        while (keepGoing) {
            System.out.println("Menu:");
            System.out.println("1) Add titles");
            System.out.println("2) Search titles");
            System.out.println("3) Delete titles");
            System.out.println("4) Output files");
            System.out.println("5) Load files");
            System.out.println("6) Save files");

            int choice = scan.nextInt();

            switch (choice) {
                case 1:
                    System.out.println("Please insert a book by title: ");
                    scan = new Scanner(System.in);
                    String titleToAdd = scan.nextLine();

                    if (booksInStock.size() == 0) {
                        Book addBook = new Book(titleToAdd, 1);
                        booksInStock.add(addBook);
                    }
                    else {
                        boolean bookAdded = false;
                        for (int i = 0; i < booksInStock.size(); i++) {

                            if (titleToAdd.equals(booksInStock.get(i).getTitle())) {
                                Book edit = booksInStock.get(i);
                                edit.setStock(booksInStock.get(i).getStock() + 1);
                                bookAdded = true;
                            }
//                            else {
//                                if (bookAdded == false) {
//                                    Book addBook = new Book(titleToAdd);
//                                    booksInStock.add(addBook);
//                                    bookAdded = true;
//                                }
//                            }
                        }
                        if (bookAdded == false) {
                            Book addBook = new Book(titleToAdd);
                            booksInStock.add(addBook);
                        }
                    }
                    break;
                case 2:
                    System.out.println("What's the title to search?: ");
                    scan = new Scanner(System.in);
                    String bookTitle = scan.nextLine();
//                    If the book title is searched for and found/not found, the user should be informed that
//                  the book exists/does not exist
                    boolean isBookThere = false;
                    for (int i = 0; i < booksInStock.size(); i++) {
                        if (bookTitle.equals(booksInStock.get(i).getTitle())) {
                            isBookThere = true;
                        }
                    }

                    if (isBookThere == true) {
                        System.out.println( "\"" + bookTitle + "\"" + " was found");
                    }
                    else {
                        System.out.println("\"" + bookTitle + "\"" + " does not exist");
                    }

                    break;
                case 3:
                    System.out.println("What title to delete?: ");
                    scan = new Scanner(System.in);
                    String bookTitle2 = scan.nextLine();
//                  If the book title is attempted to be deleted and is/is not deleted, the user should be
//                      informed that the book title was delete/not deleted
                    for (int i = 0; i < booksInStock.size(); i++) {
                        if (bookTitle2.equals(booksInStock.get(i).getTitle())) {
                            if (booksInStock.get(i).getStock() > 1) {
                                booksInStock.get(i).setStock(booksInStock.get(i).getStock() - 1);
                            }
                            else {
                                booksInStock.remove(i);
                            }
                        }
                    }

                    break;
                case 4:
                    for (int i = 0; i < booksInStock.size(); i++) {
                        System.out.println(booksInStock.get(i).getTitle() + ":" + booksInStock.get(i).getStock());
                    }
                    break;
                case 5:
                    load(booksInStock);
                    break;
                case 6:
                    save(booksInStock);
                    break;
            }
        }
    }

    public  static void load(LinkedList<Book> newBooksInStock) throws IOException {
        System.out.println("What's the name of the file?: ");
        Scanner scan = new Scanner(System.in);
        File fileName = new File(scan.nextLine());

        while (fileName.exists() == false) {
            System.out.println("File does not exist. What's the name of the file to load?: ");
            fileName = new File(scan.nextLine());
        }

        Scanner myFile = new Scanner(fileName);

        while (myFile.hasNextLine()) {
            String line = myFile.nextLine();
            Scanner stringReader = new Scanner(line);
            stringReader.useDelimiter(":");

            String bookTitle = stringReader.next();
            int bookStock = stringReader.nextInt();

            Book loadBook = new Book(bookTitle, bookStock);
            newBooksInStock.add(loadBook);

        }
        myFile.close();
    }

    public static void save(LinkedList<Book> newBookInStock) throws IOException{
        PrintWriter myWriter = new PrintWriter("Output.txt");
//        Output the following information to Inventory.txt
        for (int i = 0; i < newBookInStock.size(); i++) {
            myWriter.println(newBookInStock.get(i).getTitle() + ":" + newBookInStock.get(i).getStock());
        }
        myWriter.close();
    }
}
